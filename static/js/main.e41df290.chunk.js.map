{"version":3,"sources":["components/TaskEditor/TaskEditor.module.css","components/TaskList/TaskList.module.css","components/TaskFilter/TaskFilter.module.css","components/Task/Task.module.css","utils/Priority.js","components/PrioritySelector/PrioritySelector.js","components/TaskEditor/TaskEditor.js","components/Task/Task.js","components/TaskList/TaskList.js","components/TaskFilter/TaskFilter.js","components/App.js","index.js"],"names":["module","exports","Object","freeze","LOW","NORMAL","HIGH","PrioritySelector","options","value","onChange","name","map","item","key","defaultProps","values","Priority","ININTIAL_STATE","text","priority","TaskEditor","state","handleChange","e","setState","target","handleSubmit","preventDefault","props","onAddTask","this","className","styles","form","onSubmit","input","type","placeholder","label","Component","Task","id","completed","onDeleteTask","onUpdatePriority","onUpdateCompleted","task","actions","onClick","htmlFor","checked","TaskList","items","list","el","TaskFilter","onChangeFilter","App","addTask","taskToAdd","shortid","generate","prevState","tasks","deleteTask","filter","updatePriority","newPriority","updateCompleted","changeFilter","bind","tasksFromLS","localStorage","getItem","JSON","parse","error","console","log","prevProps","setItem","stringify","filteredTask","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e41df290.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskEditor_form__25pW5\",\"label\":\"TaskEditor_label__3LnGA\",\"input\":\"TaskEditor_input__1tTlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__3jd0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TaskFilter_input__1HRSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2eaNU\",\"lowPriority\":\"Task_lowPriority__eO8r4\",\"normalPriority\":\"Task_normalPriority__1eP__\",\"highPriority\":\"Task_highPriority__2f4BQ\",\"text\":\"Task_text__2ElH-\",\"actions\":\"Task_actions__1IQ2b\"};","export default Object.freeze({\n  LOW: 'low',\n  NORMAL: 'normal',\n  HIGH: 'high',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PrioritySelector = ({ options, value, onChange }) => (\n  <select name=\"priority\" value={value} onChange={onChange}>\n    {options.map(item => (\n      <option key={item} value={item}>\n        {item}\n      </option>\n    ))}\n  </select>\n);\n\nPrioritySelector.defaultProps = {\n  onChange: () => {},\n};\n\nPrioritySelector.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nexport default PrioritySelector;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Priority from '../../utils/Priority';\nimport styles from './TaskEditor.module.css';\nimport PrioritySelector from '../PrioritySelector/PrioritySelector';\n\nconst options = Object.values(Priority);\n\nconst ININTIAL_STATE = {\n  text: '',\n  priority: Priority.NORMAL,\n};\n\nclass TaskEditor extends Component {\n  static propTypes = {\n    onAddTask: PropTypes.func.isRequired,\n  };\n\n  state = { ...ININTIAL_STATE };\n\n  handleChange = e => {\n    // console.dir(e.target);\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddTask({ ...this.state });\n\n    this.setState({ ...ININTIAL_STATE });\n  };\n\n  render() {\n    const { priority, text } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Enter task content...\"\n          onChange={this.handleChange}\n          value={text}\n        />\n        <label className={styles.label}>\n          Select task priority:\n          <PrioritySelector\n            options={options}\n            value={priority}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Create</button>\n      </form>\n    );\n  }\n}\n\n// TaskEditor.propTypes = {\n//   onAddTask: PropTypes.func.isRequired,\n// };\n\nexport default TaskEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Task.module.css';\nimport PrioritySelector from '../PrioritySelector/PrioritySelector';\nimport Priority from '../../utils/Priority';\n\nconst options = Object.values(Priority);\n\nconst Task = ({\n  id,\n  text,\n  priority,\n  completed,\n  onDeleteTask,\n  onUpdatePriority,\n  onUpdateCompleted,\n}) => {\n  return (\n    <div className={`${styles.task} ${styles[`${priority}Priority`]}`}>\n      <p className={styles.text}>{text}</p>\n\n      <hr />\n\n      <div className={styles.actions}>\n        <button type=\"button\" onClick={onDeleteTask}>\n          Delete\n        </button>\n      </div>\n\n      <PrioritySelector\n        options={options}\n        value={priority}\n        onChange={e => onUpdatePriority(id, e.target.value)}\n      />\n\n      <label htmlFor={id}>\n        Completed\n        <input\n          id={id}\n          type=\"checkbox\"\n          checked={completed}\n          onChange={onUpdateCompleted}\n        />\n      </label>\n    </div>\n  );\n};\n\nTask.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n  onUpdatePriority: PropTypes.func.isRequired,\n};\n\nexport default Task;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task/Task';\nimport styles from './TaskList.module.css';\n\nconst TaskList = ({\n  items,\n  onDeleteTask,\n  onUpdateCompleted,\n  onUpdatePriority,\n}) => {\n  return (\n    <ul className={styles.list}>\n      {items.map(el => (\n        <li key={el.id}>\n          <Task\n            {...el}\n            onDeleteTask={() => onDeleteTask(el.id)}\n            onUpdateCompleted={() => onUpdateCompleted(el.id)}\n            onUpdatePriority={onUpdatePriority}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTaskList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n  onUpdatePriority: PropTypes.func.isRequired,\n};\n\nexport default TaskList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TaskFilter.module.css';\n\nconst TaskFilter = ({ value, onChangeFilter }) => {\n  return (\n    <input\n      type=\"text\"\n      className={styles.input}\n      value={value}\n      onChange={onChangeFilter}\n      placeholder=\"Type to filter tasks...\"\n    />\n  );\n};\n\nTaskFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default TaskFilter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport TaskEditor from './TaskEditor/TaskEditor';\nimport TaskList from './TaskList/TaskList';\nimport TaskFilter from './TaskFilter/TaskFilter';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tasks: [],\n      filter: '',\n    };\n\n    this.changeFilter = this.changeFilter.bind(this);\n    // console.log('constructor work');\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount work');\n\n    try {\n      const tasksFromLS = localStorage.getItem('tasks');\n      if (tasksFromLS) {\n        this.setState({ tasks: JSON.parse(tasksFromLS) });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('componentDidUpdate work');\n    const { tasks } = this.state;\n    if (prevState.tasks !== tasks) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n  changeFilter(e) {\n    this.setState({\n      filter: e.target.value,\n    });\n  }\n\n  addTask = task => {\n    const taskToAdd = {\n      ...task,\n      id: shortid.generate(),\n      completed: false,\n    };\n\n    this.setState(prevState => ({ tasks: [...prevState.tasks, taskToAdd] }));\n  };\n\n  deleteTask = id => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.filter(el => el.id !== id),\n    }));\n  };\n\n  updatePriority = (id, newPriority) => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map(el =>\n        el.id === id ? { ...el, priority: newPriority } : el,\n      ),\n    }));\n  };\n\n  updateCompleted = id => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map(el =>\n        el.id === id ? { ...el, completed: !el.completed } : el,\n      ),\n    }));\n  };\n\n  render() {\n    // console.log('render work');\n    const { tasks, filter } = this.state;\n    const filteredTask = tasks.filter(el => el.text.includes(filter));\n    return (\n      <div>\n        <TaskEditor onAddTask={this.addTask} />\n\n        <hr />\n\n        <TaskFilter value={filter} onChangeFilter={this.changeFilter} />\n\n        <TaskList\n          onUpdatePriority={this.updatePriority}\n          onDeleteTask={this.deleteTask}\n          onUpdateCompleted={this.updateCompleted}\n          items={filteredTask}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}